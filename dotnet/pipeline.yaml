---
resources:
- name: dotnet-core-buildpack-gh-release
  type: github-release
  source:
        owner: cloudfoundry
        repository: dotnet-core-buildpack
        access_token: {{github-access-token}}
- name: git.cf-dotnet-core-buildpack
  type: git
  source:
    uri: git@github.com:SUSE/cf-dotnet-core-buildpack.git
    private_key: {{github-private-key}}
- name: ci
  type: git
  source:
    uri: git@github.com:SUSE/buildpacks-ci.git
    private_key: {{github-private-key}}
- name: cf-obs-binary-builder
  type: git
  source:
    uri: git@github.com:SUSE/cf-obs-binary-builder.git
    private_key: {{github-private-key}}
- name: depwatcher
  type: git
  source:
    uri: https://github.com/SUSE/cf-buildpacks-ci.git
    private_key: {{github-private-key}}
    paths: [dockerfiles/depwatcher]
    branch: incorporate_env_into_depwatcher
jobs:
- name: build-dotnet-dependencies-from-release
  plan:
  - aggregate:
    - get: ci
    - get: dotnet-core-buildpack-gh-release
      trigger: true
    - get: depwatcher
  - task: build
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: registry.opensuse.org/cloud/platform/stack/rootfs/images/sle15
          username: {{docker-internal-username}}
          password: {{docker-internal-password}}
      inputs:
        - name: ci
        - name: dotnet-core-buildpack-gh-release
        - name: depwatcher
      outputs:
        - name: artifacts
      params:
        TERM: xterm
        OAUTH_AUTHORIZATION_TOKEN: {{github-access-token}}
        LOCAL_BUILD: "true"
        AWS_ACCESS_KEY_ID: {{aws-access-key}}
        AWS_SECRET_ACCESS_KEY: {{aws-secret-key}}
        AWS_DEFAULT_REGION: us-east-1
        STACK: sle15
        STAGING_BUILDPACKS_BUCKET: {{s3-staging-buildpacks-bucket}}
      run:
        path: ci/dotnet/tasks/build.sh
  - task: push-dotnet-cli-sources-to-obs
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: splatform/binary_builder_obs_opensuse
      inputs:
        - name: ci
      params:
        OBS_PROJECT: {{obs-buildpack-sources}}
        STAGING_BUILDPACKS_BUCKET: {{s3-staging-buildpacks-bucket}}
        OBS_USERNAME:  {{obs-username}}
        OBS_PASSWORD:  {{obs-password}}
        AWS_ACCESS_KEY_ID: {{aws-access-key}}
        AWS_SECRET_ACCESS_KEY: {{aws-secret-key}}
        AWS_DEFAULT_REGION: us-east-1
      run:
        path: ci/dotnet/tasks/push-obs-sources.sh
- name: rebase-dotnet-buildpack-against-upstream
  plan:
  - aggregate:
    - get: dotnet-core-buildpack-gh-release
      trigger: true
      passed:
        - build-dotnet-dependencies-from-release
    - get: git.cf-dotnet-core-buildpack
    - get: ci
  - task: rebase-against-upstream
    input_mapping:
      buildpack-gh-release: dotnet-core-buildpack-gh-release
      git.cf-buildpack: git.cf-dotnet-core-buildpack
    params:
      BUILDPACK: dotnet-core
      GITHUB_PRIVATE_KEY: |
        {{github-private-key}}
      GIT_MAIL: {{github-username}}
      GIT_USER: suse-cf-ci-bot
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: splatform/binary_builder_obs_opensuse
      inputs:
        - name: ci
        - name: buildpack-gh-release
        - name: git.cf-buildpack
      outputs:
      - name: out
      run:
        path: ci/buildpacks/tasks/rebase-master.sh
- name: add-missing-dotnet-core-obs-dependencies
  plan:
  - aggregate:
    - get: dotnet-core-buildpack-gh-release
      trigger: true
      passed:
        - rebase-dotnet-buildpack-against-upstream
    - get: ci
    - get: cf-obs-binary-builder
    - get: depwatcher
  - task: add-missing-dependencies
    input_mapping: { buildpack-gh-release: dotnet-core-buildpack-gh-release }
    params:
      OBS_BUILDPACK_PROJECT: {{obs-buildpacks-staging-project}}
      STAGING_BUILDPACKS_BUCKET: {{s3-staging-buildpacks-bucket}}
      OBS_DEPENDENCY_PROJECT: {{obs-buildpack-dependencies-staging-project}}
      BUILDPACK: dotnet-core
      OBS_USERNAME:  {{obs-username}}
      OBS_PASSWORD:  {{obs-password}}
      DEPDIR: '.'
      STACK_MAPPINGS: '{ "sle12":"cflinuxfs2", "opensuse42": "cflinuxfs2", "sle15": "cflinuxfs3"}'
      OAUTH_AUTHORIZATION_TOKEN: {{github-access-token}}
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: splatform/binary_builder_obs_opensuse
      inputs:
        - name: ci
        - name: cf-obs-binary-builder
        - name: depwatcher
        - name: buildpack-gh-release
      outputs:
      - name: out
      run:
        path: ci/buildpacks/tasks/add-missing-dependencies.sh
- name: create-dotnet-core-buildpack-on-obs
  plan:
  - aggregate:
    - get: dotnet-core-buildpack-gh-release
      passed:
        - add-missing-dotnet-core-obs-dependencies
      trigger: true
    - get: ci
    - get: cf-obs-binary-builder
  - task: create-on-obs
    input_mapping: { buildpack-gh-release: dotnet-core-buildpack-gh-release }
    params:
      OBS_DEPENDENCY_PROJECT: {{obs-buildpack-dependencies-staging-project}}
      OBS_BUILDPACK_PROJECT: {{obs-buildpacks-staging-project}}
      STAGING_BUILDPACKS_BUCKET: {{s3-staging-buildpacks-bucket}}
      BUILDPACK: dotnet-core
      OBS_USERNAME:  {{obs-username}}
      OBS_PASSWORD:  {{obs-password}}
      WAITING_TIME_SECS: 60
      NUMBER_OF_RETRIES: 50
      CACHE_SOURCES: true
      AWS_ACCESS_KEY_ID: {{aws-access-key}}
      AWS_SECRET_ACCESS_KEY: {{aws-secret-key}}
      AWS_DEFAULT_REGION: us-east-1
      STACK_MAPPINGS: '{ "sle12":"cflinuxfs2", "opensuse42": "cflinuxfs2", "sle15": "cflinuxfs3"}'
      OAUTH_AUTHORIZATION_TOKEN: {{github-access-token}}
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: splatform/binary_builder_obs_opensuse
      inputs:
        - name: ci
        - name: cf-obs-binary-builder
        - name: buildpack-gh-release
      outputs:
      - name: out
      run:
        path: ci/dotnet/tasks/create-buildpack-on-obs.sh
