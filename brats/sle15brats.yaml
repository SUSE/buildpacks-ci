---
<% buildpacks = ["ruby", "go", "python", "php", "nodejs", "staticfile", "nginx", "binary"] %>
resources:
- name: ci
  type: git
  source:
    uri: git@github.com:SUSE/buildpacks-ci.git
    private_key: {{github-private-key}}
    branch: sle15
<% buildpacks.each do |buildpack| %>
- name: gh-release.<%= buildpack %>-buildpack
  type: github-release
  source:
    owner: cloudfoundry
    repository: <%= buildpack %>-buildpack
    access_token: {{github-access-token}}
- name: git.cf-<%= buildpack %>-buildpack-readonly
  type: git
  source:
    uri: https://github.com/SUSE/cf-<%= buildpack %>-buildpack.git
- name: s3.suse-buildpacks-staging-<%= buildpack %>
  type: s3
  source:
    bucket: suse-buildpacks-staging
    # TODO: Switch to just using '-' when all the buildpacks have a '-' version.
    #regexp: <%= buildpack %>-buildpack-v([0-9-.]+)-pre-[0-9a-f]{8}\.zip
    regexp: <%= buildpack %>[-_]buildpack-v([0-9-.]+)-pre-[0-9a-f]{8}\.zip
    access_key_id: {{aws-access-key}}
    secret_access_key: {{aws-secret-key}}
    private_key: {{github-private-key}}
<% end %>
jobs:
<% buildpacks.each do |buildpack| %>
- name: run-<%= buildpack %>-brats
  serial_groups: [tests]
  plan:
  - aggregate:
    - get: s3.suse-buildpacks-staging-<%= buildpack %>
      trigger: true
    - get: ci
    - get: git.cf-<%= buildpack %>-buildpack-readonly
    - get: gh-release.<%= buildpack %>-buildpack
  - task: cleanup
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: splatform/concourse-brats
      inputs:
        - name: ci
      params:
        CF_ENDPOINT: {{brats-cf-endpoint}}
        CF_USERNAME: {{brats-cf-username}}
        CF_PASSWORD: {{brats-cf-password}}
        CF_ORG: {{brats-cf-org}}
        CF_SPACE: {{brats-cf-space}}
      run:
        path: ci/brats/tasks/cleanup.sh
  - task: run-tests
    input_mapping:
      git.cf-buildpack: git.cf-<%= buildpack %>-buildpack-readonly
      s3.suse-buildpacks-staging: s3.suse-buildpacks-staging-<%= buildpack %>
      gh-release.buildpack: gh-release.<%= buildpack %>-buildpack
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: splatform/concourse-brats
      inputs:
        - name: git.cf-buildpack
        - name: gh-release.buildpack
        - name: s3.suse-buildpacks-staging
        - name: ci
      outputs:
        - name: mail-output
      params:
        BUILDPACK: <%= buildpack %>
        TEST_SUITE: brats
        PROXY_SCHEME: {{brats-proxy-scheme}}
        PROXY_PORT: {{brats-proxy-port}}
        PROXY_USERNAME: {{brats-proxy-username}}
        PROXY_PASSWORD: {{brats-proxy-password}}
        PROXY_HOST: {{brats-proxy-host}}
        CF_STACK: sle15
        CF_ENDPOINT: {{brats-cf-endpoint}}
        CF_USERNAME: {{brats-cf-username}}
        CF_PASSWORD: {{brats-cf-password}}
        CF_ORG: {{brats-cf-org}}
        CF_SPACE: {{brats-cf-space}}
        PROJECT: {{obs-buildpacks-staging-project}}
        GIT_MAIL: {{github-username}}
        GIT_USER: suse-cf-ci-bot
        GINKGO_NODES: 5
      run:
        path: ci/brats/tasks/run-tests.sh
- name: run-<%= buildpack %>-integration-tests
  serial_groups: [tests]
  plan:
  - aggregate:
    - get: s3.suse-buildpacks-staging-<%= buildpack %>
      trigger: true
    - get: ci
    - get: git.cf-<%= buildpack %>-buildpack-readonly
    - get: gh-release.<%= buildpack %>-buildpack
  - task: cleanup
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: splatform/concourse-brats
      inputs:
        - name: ci
      params:
        CF_ENDPOINT: {{brats-cf-endpoint}}
        CF_USERNAME: {{brats-cf-username}}
        CF_PASSWORD: {{brats-cf-password}}
        CF_ORG: {{brats-cf-org}}
        CF_SPACE: {{brats-cf-space}}
      run:
        path: ci/brats/tasks/cleanup.sh
  - task: run-tests
    privileged: true
    input_mapping:
      git.cf-buildpack: git.cf-<%= buildpack %>-buildpack-readonly
      gh-release.buildpack: gh-release.<%= buildpack %>-buildpack
      s3.suse-buildpacks-staging: s3.suse-buildpacks-staging-<%= buildpack %>
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: splatform/concourse-brats
      inputs:
        - name: git.cf-buildpack
        - name: gh-release.buildpack
        - name: s3.suse-buildpacks-staging
        - name: ci
      outputs:
        - name: mail-output
      params:
        BUILDPACK: <%= buildpack %>
        TEST_SUITE: integration
        STAGING_DOCKER_REGISTRY: {{docker-internal-registry}}
        STAGING_DOCKER_REGISTRY_USERNAME: {{docker-internal-username}}
        STAGING_DOCKER_REGISTRY_PASSWORD: {{docker-internal-password}}
        PROXY_SCHEME: {{brats-proxy-scheme}}
        PROXY_PORT: {{brats-proxy-port}}
        PROXY_USERNAME: {{brats-proxy-username}}
        PROXY_PASSWORD: {{brats-proxy-password}}
        PROXY_HOST: {{brats-proxy-host}}
        CF_STACK: sle15
        CF_ENDPOINT: {{brats-cf-endpoint}}
        CF_USERNAME: {{brats-cf-username}}
        CF_PASSWORD: {{brats-cf-password}}
        CF_ORG: {{brats-cf-org}}
        CF_SPACE: {{brats-cf-space}}
        CF_STACK_DOCKER_IMAGE: splatform/rootfs-opensuse42
        PROJECT: {{obs-buildpacks-staging-project}}
        GIT_MAIL: {{github-username}}
        GIT_USER: suse-cf-ci-bot
        COMPOSER_GITHUB_OAUTH_TOKEN: {{github-access-token}} # Needed for PHP integration tests
        GINKGO_ATTEMPTS: 3
        GINKGO_NODES: 5
      run:
        path: ci/brats/tasks/run-tests.sh
<% end %>
