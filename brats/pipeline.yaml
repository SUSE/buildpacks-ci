---
<% buildpacks = ["ruby", "go", "python"] %>
resource_types:
- name: email
  type: docker-image
  source:
    repository: pcfseceng/email-resource

resources:
- name: email.suse
  type: email
  source:
    smtp:
      anonymous: true
      host: {{notification-imap-alternate-host}}
      port: {{notification-imap-alternate-port}}
      ca_cert: |
        ((notification-ca-cert))
    from: {{notification-from}}
    to: [ {{notification-to}} ]
- name: ci
  type: git
  source:
    uri: git@github.com:SUSE/buildpacks-ci.git
    private_key: {{github-private-key}}
    to: [ {{notification-to}} ]
- name: git.scf
  type: git
  source:
    uri: git@github.com:SUSE/scf.git
    private_key: {{github-private-key}}
    branch: develop
<% buildpacks.each do |buildpack| %>
- name: git.<%= buildpack %>-buildpack
  type: git
  source:
    uri: git@github.com:SUSE/cf-<%= buildpack %>-buildpack.git
    private_key: {{github-private-key}}
- name: git.<%= buildpack %>-buildpack-release
  type: git
  source:
    uri: git@github.com:SUSE/cf-<%= buildpack %>-buildpack-release.git
    private_key: {{github-private-key}}
- name: git.upstream-<%= buildpack %>-buildpack
  type: git
  source:
    uri: git@github.com:cloudfoundry/<%= buildpack %>-buildpack.git
    private_key: {{github-private-key}}
- name: git.cf-buildpack-releases-<%= buildpack %>-readonly
  type: git
  source:
    uri: git@github.com:SUSE/cf-buildpack-releases.git
    private_key: {{github-private-key}}
    paths:
    - <%= buildpack %>/*.json
    private_key: {{github-private-key}}
- name: git.cf-buildpack-releases-<%= buildpack %>
  type: git
  source:
    uri: git@github.com:SUSE/cf-buildpack-releases.git
    private_key: {{github-private-key}}
- name: s3.suse-buildpacks-staging-<%= buildpack %>
  type: s3
  source:
    bucket: suse-buildpacks-staging
    regexp: <%= buildpack %>_buildpack-v([0-9-.]+)-pre-[0-9a-f]{8}\.zip
    access_key_id: {{aws-access-key}}
    secret_access_key: {{aws-secret-key}}
    private_key: {{github-private-key}}
- name: s3.suse-buildpacks-<%= buildpack %>
  type: s3
  source:
    bucket: cf-buildpacks.suse.com
    regexp: <%= buildpack %>_buildpack-v([0-9-.]+)-[0-9a-f]{8}\.zip
    access_key_id: {{aws-access-key}}
    secret_access_key: {{aws-secret-key}}
<% end %>
jobs:
<% buildpacks.each do |buildpack| %>
- name: run-<%= buildpack %>-brats
  serial_groups: [brats]
  plan:
  - get: s3.suse-buildpacks-staging-<%= buildpack %>
    trigger: true
  - get: ci
  - get: git.<%= buildpack %>-buildpack
  - task: cleanup
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: splatform/concourse-brats
      inputs:
        - name: ci
      params:
        CF_ENDPOINT: {{brats-cf-endpoint}}
        CF_USERNAME: {{brats-cf-username}}
        CF_PASSWORD: {{brats-cf-password}}
        CF_ORG: {{brats-cf-org}}
        CF_SPACE: {{brats-cf-space}}
      run:
        path: ci/brats/tasks/cleanup.sh
    on_failure:
      put: email.suse
      params:
        subject_text: "BRATS cleanup failed"
        body_text: "There was a problem cleaning up the BRATS cluster. BRATS could not be run!"
  - task: run-brats
    input_mapping:
      git.buildpack: git.<%= buildpack %>-buildpack
      s3.suse-buildpacks-staging: s3.suse-buildpacks-staging-<%= buildpack %>
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: splatform/concourse-brats
      inputs:
        - name: git.buildpack
        - name: s3.suse-buildpacks-staging
        - name: ci
      outputs:
        - name: mail-output
      params:
        PROXY_SCHEME: {{brats-proxy-scheme}}
        PROXY_PORT: {{brats-proxy-port}}
        PROXY_USERNAME: {{brats-proxy-username}}
        PROXY_PASSWORD: {{brats-proxy-password}}
        PROXY_HOST: {{brats-proxy-host}}
        CF_STACK: {{brats-cf-stack}}
        CF_ENDPOINT: {{brats-cf-endpoint}}
        CF_USERNAME: {{brats-cf-username}}
        CF_PASSWORD: {{brats-cf-password}}
        CF_ORG: {{brats-cf-org}}
        CF_SPACE: {{brats-cf-space}}
        PROJECT: {{obs-buildpacks-staging-project}}
        GIT_MAIL: {{github-username}}
        GIT_USER: suse-cf-ci-bot
      run:
        path: ci/brats/tasks/run-brats.sh
    on_failure:
      put: email.suse
      params:
        subject: mail-output/subject-failed.txt
        body: mail-output/body-failed.txt
- name: setup-manual-<%= buildpack %>-release-trigger
  plan:
  - get: s3.suse-buildpacks-staging-<%= buildpack %>
    trigger: true
    passed:
    - run-<%= buildpack %>-brats
  - get: ci
    passed:
    - run-<%= buildpack %>-brats
  - get: git.<%= buildpack %>-buildpack
  - get: git.cf-buildpack-releases-<%= buildpack %>
  - task: setup-manual-release-trigger
    input_mapping:
      s3.suse-buildpacks-staging: s3.suse-buildpacks-staging-<%= buildpack %>
      git.cf-buildpack-releases: git.cf-buildpack-releases-<%= buildpack %>
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: splatform/concourse-brats
      inputs:
        - name: ci
        - name: s3.suse-buildpacks-staging
        - name: git.cf-buildpack-releases
      outputs:
        - name: mail-output
      params:
        BUILDPACK: <%= buildpack %>
        GITHUB_TOKEN: ((github-access-token))
        GITHUB_PRIVATE_KEY: |
          {{github-private-key}}
        GIT_MAIL: {{github-username}}
        GIT_USER: suse-cf-ci-bot
      run:
        path: ci/brats/tasks/setup-manual-release-trigger.sh
- name: create-final-<%= buildpack %>-buildpack
  plan:
  - get: ci
    passed:
    - setup-manual-<%= buildpack %>-release-trigger
  - get: git.cf-buildpack-releases-<%= buildpack %>-readonly
    trigger: true
  - get: git.upstream-<%= buildpack %>-buildpack
  - task: create-final-buildpack
    input_mapping:
      git.cf-buildpack-releases: git.cf-buildpack-releases-<%= buildpack %>-readonly
      git.upstream-buildpack: git.upstream-<%= buildpack %>-buildpack
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: splatform/concourse-brats
      inputs:
        - name: ci
        - name: git.cf-buildpack-releases
        - name: git.upstream-buildpack
      outputs:
        - name: s3-out
      params:
        BUILDPACK: <%= buildpack %>
        STAGING_BUCKET_NAME: suse-buildpacks-staging
        PRODUCTION_BUCKET_NAME: cf-buildpacks.suse.com
        PRODUCTION_BUCKET_URL: "https://cf-buildpacks.suse.com"
        AWS_ACCESS_KEY_ID: {{aws-access-key}}
        AWS_SECRET_ACCESS_KEY: {{aws-secret-key}}
        AWS_DEFAULT_REGION: us-east-1
      run:
        path: ci/brats/tasks/create-final-buildpack.sh
  - put: s3.suse-buildpacks-<%= buildpack %>
    params:
      file: s3-out/*.zip
      acl: public-read
- name: submit-<%= buildpack %>-buildpack-to-scf
  plan:
  - get: ci
    passed:
    - create-final-<%= buildpack %>-buildpack
  - get: git.<%= buildpack %>-buildpack-release
  - get: git.scf
  - get: s3.suse-buildpacks-<%= buildpack %>
    trigger: true
    passed:
    - create-final-<%= buildpack %>-buildpack
  - task: submit-buildpack-to-scf
    input_mapping:
      git.buildpack-release: git.<%= buildpack %>-buildpack-release
      s3.suse-buildpacks: s3.suse-buildpacks-<%= buildpack %>
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: splatform/concourse-brats
      inputs:
        - name: ci
        - name: git.scf
        - name: git.buildpack-release
        - name: s3.suse-buildpacks
      params:
        BUILDPACK: <%= buildpack %>
        GITHUB_TOKEN: ((github-access-token))
        GITHUB_PRIVATE_KEY: |
          {{github-private-key}}
        GIT_MAIL: {{github-username}}
        GIT_USER: suse-cf-ci-bot
      run:
        path: ci/brats/tasks/submit-buildpack-to-scf.sh
<% end %>
