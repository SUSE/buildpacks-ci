---
<% buildpacks = ["ruby", "go"] %>
resource_types:
- name: email
  type: docker-image
  source:
    repository: pcfseceng/email-resource

resources:
- name: email.suse
  type: email
  source:
    smtp:
      anonymous: true
      host: {{notification-imap-alternate-host}}
      port: {{notification-imap-alternate-port}}
      ca_cert: |
        ((notification-ca-cert))
    from: {{notification-from}}
    to: [ {{notification-to}} ]
- name: ci
  type: git
  source:
    uri: git@github.com:SUSE/buildpacks-ci.git
    private_key: {{github-private-key}}
    branch: setup-release-process
    to: [ {{notification-to}} ]
- name: git.scf
  type: git
  source:
    uri: git@github.com:SUSE/scf.git
    private_key: {{github-private-key}}
    branch: develop
<% buildpacks.each do |buildpack| %>
- name: git.<%= buildpack %>-buildpack
  type: git
  source:
    uri: git@github.com:SUSE/cf-<%= buildpack %>-buildpack.git
    private_key: {{github-private-key}}
- name: git.<%= buildpack %>-buildpack-release
  type: git
  source:
    uri: git@github.com:SUSE/cf-<%= buildpack %>-buildpack-release.git
    private_key: {{github-private-key}}
- name: git.upstream-<%= buildpack %>-buildpack
  type: git
  source:
    uri: git@github.com:cloudfoundry/<%= buildpack %>-buildpack.git
    private_key: {{github-private-key}}
- name: git.cf-buildpack-releases-<%= buildpack %>-readonly
  type: git
  source:
    uri: git@github.com:SUSE/cf-buildpack-releases.git
    private_key: {{github-private-key}}
    paths:
    - <%= buildpack %>/*.json
    private_key: {{github-private-key}}
- name: git.cf-buildpack-releases-<%= buildpack %>
  type: git
  source:
    uri: git@github.com:SUSE/cf-buildpack-releases.git
    private_key: {{github-private-key}}
- name: s3.suse-buildpacks-staging-<%= buildpack %>
  type: s3
  source:
    bucket: suse-buildpacks-staging
    regexp: <%= buildpack %>_buildpack-v([0-9-.]+)-pre-[0-9a-f]{8}\.zip
    access_key_id: {{aws-access-key}}
    secret_access_key: {{aws-secret-key}}
<% end %>
jobs:
<% buildpacks.each do |buildpack| %>
- name: <%= buildpack %>-brats
  serial_groups: [brats]
  plan:
  - get: s3.suse-buildpacks-staging-<%= buildpack %>
    trigger: true
  - get: ci
  - get: git.<%= buildpack %>-buildpack
  - task: cleanup
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: splatform/concourse-brats
      inputs:
        - name: ci
      params:
        CF_ENDPOINT: {{brats-cf-endpoint}}
        CF_USERNAME: {{brats-cf-username}}
        CF_PASSWORD: {{brats-cf-password}}
        CF_ORG: {{brats-cf-org}}
        CF_SPACE: {{brats-cf-space}}
      run:
        path: ci/brats/tasks/cleanup.sh
  - task: brats
    input_mapping:
      git.buildpack: git.<%= buildpack %>-buildpack
      s3.suse-buildpacks-staging: s3.suse-buildpacks-staging-<%= buildpack %>
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: splatform/concourse-brats
      inputs:
        - name: git.buildpack
        - name: s3.suse-buildpacks-staging
        - name: ci
      outputs:
        - name: brats-ouput
        - name: mail-output
      params:
        GINKGO_NODES: 1
        PROXY_SCHEME: {{brats-proxy-scheme}}
        PROXY_PORT: {{brats-proxy-port}}
        PROXY_USERNAME: {{brats-proxy-username}}
        PROXY_PASSWORD: {{brats-proxy-password}}
        PROXY_HOST: {{brats-proxy-host}}
        CF_STACK: {{brats-cf-stack}}
        CF_ENDPOINT: {{brats-cf-endpoint}}
        CF_USERNAME: {{brats-cf-username}}
        CF_PASSWORD: {{brats-cf-password}}
        CF_ORG: {{brats-cf-org}}
        CF_SPACE: {{brats-cf-space}}
        PROJECT: {{obs-buildpacks-staging-project}}
      run:
        path: ci/brats/tasks/brats.sh
    on_failure:
      put: email.suse
      params:
        subject: mail-output/subject-failed.txt
        body: mail-output/body-failed.txt
- name: prepare-<%= buildpack %>-release-trigger
  plan:
  - get: s3.suse-buildpacks-staging-<%= buildpack %>
    trigger: true
    passed:
    - <%= buildpack %>-brats
  - get: ci
    passed:
    - <%= buildpack %>-brats
  - get: git.<%= buildpack %>-buildpack
  - get: git.cf-buildpack-releases-<%= buildpack %>
  - task: prepare-trigger
    input_mapping:
      s3.suse-buildpacks-staging: s3.suse-buildpacks-staging-<%= buildpack %>
      git.cf-buildpack-releases: git.cf-buildpack-releases-<%= buildpack %>
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: splatform/concourse-brats
      inputs:
        - name: ci
        - name: s3.suse-buildpacks-staging
        - name: git.cf-buildpack-releases
      outputs:
        - name: mail-output
      params:
        BUILDPACK: <%= buildpack %>
        GITHUB_TOKEN: ((github-access-token))
        GITHUB_PRIVATE_KEY: |
          {{github-private-key}}
        GIT_MAIL: {{github-username}}
        GIT_USER: suse-cf-ci-bot
      run:
        path: ci/brats/tasks/create-qa-pr.sh
- name: prepare-<%= buildpack %>-release
  plan:
  - get: ci
    passed:
    - prepare-<%= buildpack %>-release-trigger
  - get: git.cf-buildpack-releases-<%= buildpack %>-readonly
    trigger: true
  - get: git.upstream-<%= buildpack %>-buildpack
  - get: git.<%= buildpack %>-buildpack-release
  - get: git.scf
  - task: prepare-release
    input_mapping:
      git.cf-buildpack-releases: git.cf-buildpack-releases-<%= buildpack %>-readonly
      git.upstream-buildpack: git.upstream-<%= buildpack %>-buildpack
      git.buildpack-release: git.<%= buildpack %>-buildpack-release
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: splatform/concourse-brats
      inputs:
        - name: ci
        - name: git.cf-buildpack-releases
        - name: git.upstream-buildpack
        - name: git.scf
      params:
        BUILDPACK: <%= buildpack %>
        GITHUB_TOKEN: ((github-access-token))
        GITHUB_PRIVATE_KEY: |
          {{github-private-key}}
        GIT_MAIL: {{github-username}}
        GIT_USER: suse-cf-ci-bot
        STAGING_BUCKET_NAME: suse-buildpacks-staging
        PRODUCTION_BUCKET_NAME: suse-buildpacks
        AWS_ACCESS_KEY_ID: {{aws-access-key}}
        AWS_SECRET_ACCESS_KEY: {{aws-secret-key}}
        AWS_DEFAULT_REGION: us-east-1
      run:
        path: ci/brats/tasks/prepare-release.sh
<% end %>
