---
<% buildpacks = ["ruby", "go", "python", "php", "nodejs", "staticfile", "nginx", "binary", "dotnet-core"] %>
<% integration_tests = ["nginx", "binary", "ruby", "go", "nodejs"] %>
resource_types:
- name: email
  type: docker-image
  source:
    repository: pcfseceng/email-resource

resources:
- name: email.suse
  type: email
  source:
    smtp:
      anonymous: true
      host: {{notification-imap-alternate-host}}
      port: {{notification-imap-alternate-port}}
      ca_cert: |
        ((notification-ca-cert))
    from: {{notification-from}}
    to:
      - {{notification-to}}
- name: ci
  type: git
  source:
    uri: git@github.com:SUSE/buildpacks-ci.git
    private_key: {{github-private-key}}
<% buildpacks.each do |buildpack| %>
- name: git.cf-<%= buildpack %>-buildpack
  type: git
  source:
    uri: git@github.com:SUSE/cf-<%= buildpack %>-buildpack.git
    private_key: {{github-private-key}}
- name: git.cf-<%= buildpack %>-buildpack-release
  type: git
  source:
    uri: git@github.com:SUSE/cf-<%= buildpack %>-buildpack-release.git
    private_key: {{github-private-key}}
- name: s3.suse-buildpacks-staging-<%= buildpack %>
  type: s3
  source:
    bucket: suse-buildpacks-staging
    # TODO: Switch to just using '-' when all the buildpacks have a '-' version.
    #regexp: <%= buildpack %>-buildpack-v([0-9-.]+)-pre-[0-9a-f]{8}\.zip
    regexp: <%= buildpack %>[-_]buildpack-v([0-9-.]+)-pre-[0-9a-f]{8}\.zip
    access_key_id: {{aws-access-key}}
    secret_access_key: {{aws-secret-key}}
    private_key: {{github-private-key}}
- name: s3.cf-buildpacks.suse.com-<%= buildpack %>
  type: s3
  source:
    bucket: cf-buildpacks.suse.com
    # TODO: Switch to just using '-' when all the buildpacks have a '-' version.
    #regexp: <%= buildpack %>-buildpack-v([0-9-.]+)-[0-9a-f]{8}\.zip
    regexp: <%= buildpack %>[-_]buildpack-v([0-9-.]+)-[0-9a-f]{8}\.zip
    access_key_id: {{aws-access-key}}
    secret_access_key: {{aws-secret-key}}
<% end %>
jobs:
<% buildpacks.each do |buildpack| %>
- name: run-<%= buildpack %>-brats
  serial_groups: [tests]
  plan:
  - aggregate:
    - get: s3.suse-buildpacks-staging-<%= buildpack %>
      trigger: true
    - get: ci
    - get: git.cf-<%= buildpack %>-buildpack
  - task: cleanup
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: splatform/concourse-brats
      inputs:
        - name: ci
      params:
        CF_ENDPOINT: {{brats-cf-endpoint}}
        CF_USERNAME: {{brats-cf-username}}
        CF_PASSWORD: {{brats-cf-password}}
        CF_ORG: {{brats-cf-org}}
        CF_SPACE: {{brats-cf-space}}
      run:
        path: ci/brats/tasks/cleanup.sh
    on_failure:
      put: email.suse
      params:
        subject_text: "BRATS cleanup failed"
        body_text: "There was a problem cleaning up the BRATS cluster. BRATS could not be run!"
  - task: run-tests
    input_mapping:
      git.cf-buildpack: git.cf-<%= buildpack %>-buildpack
      s3.suse-buildpacks-staging: s3.suse-buildpacks-staging-<%= buildpack %>
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: splatform/concourse-brats
      inputs:
        - name: git.cf-buildpack
        - name: s3.suse-buildpacks-staging
        - name: ci
      outputs:
        - name: mail-output
      params:
        BUILDPACK: <%= buildpack %>
        TEST_SUITE: brats
        PROXY_SCHEME: {{brats-proxy-scheme}}
        PROXY_PORT: {{brats-proxy-port}}
        PROXY_USERNAME: {{brats-proxy-username}}
        PROXY_PASSWORD: {{brats-proxy-password}}
        PROXY_HOST: {{brats-proxy-host}}
        CF_STACK: {{brats-cf-stack}}
        CF_ENDPOINT: {{brats-cf-endpoint}}
        CF_USERNAME: {{brats-cf-username}}
        CF_PASSWORD: {{brats-cf-password}}
        CF_ORG: {{brats-cf-org}}
        CF_SPACE: {{brats-cf-space}}
        PROJECT: {{obs-buildpacks-staging-project}}
        GIT_MAIL: {{github-username}}
        GIT_USER: suse-cf-ci-bot
      run:
        path: ci/brats/tasks/run-tests.sh
    on_failure:
      put: email.suse
      params:
        subject: mail-output/subject-failed.txt
        body: mail-output/body-failed.txt
- name: run-<%= buildpack %>-integration-tests
  serial_groups: [tests]
  plan:
  - aggregate:
    - get: s3.suse-buildpacks-staging-<%= buildpack %>
      trigger: true
      passed:
      - run-<%= buildpack %>-brats
    - get: ci
    - get: git.cf-<%= buildpack %>-buildpack
  - task: cleanup
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: splatform/concourse-brats
      inputs:
        - name: ci
      params:
        CF_ENDPOINT: {{brats-cf-endpoint}}
        CF_USERNAME: {{brats-cf-username}}
        CF_PASSWORD: {{brats-cf-password}}
        CF_ORG: {{brats-cf-org}}
        CF_SPACE: {{brats-cf-space}}
      run:
        path: ci/brats/tasks/cleanup.sh
    on_failure:
      put: email.suse
      params:
        subject_text: "BRATS cleanup failed"
        body_text: "There was a problem cleaning up the BRATS cluster. BRATS could not be run!"
  - task: run-tests
    privileged: true
    input_mapping:
      git.cf-buildpack: git.cf-<%= buildpack %>-buildpack
      s3.suse-buildpacks-staging: s3.suse-buildpacks-staging-<%= buildpack %>
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: splatform/concourse-brats
      inputs:
        - name: git.cf-buildpack
        - name: s3.suse-buildpacks-staging
        - name: ci
      outputs:
        - name: mail-output
      params:
        BUILDPACK: <%= buildpack %>
        TEST_SUITE: integration
        STAGING_DOCKER_REGISTRY: {{docker-internal-registry}}
        STAGING_DOCKER_REGISTRY_USERNAME: {{docker-internal-username}}
        STAGING_DOCKER_REGISTRY_PASSWORD: {{docker-internal-password}}
        PROXY_SCHEME: {{brats-proxy-scheme}}
        PROXY_PORT: {{brats-proxy-port}}
        PROXY_USERNAME: {{brats-proxy-username}}
        PROXY_PASSWORD: {{brats-proxy-password}}
        PROXY_HOST: {{brats-proxy-host}}
        CF_STACK: {{brats-cf-stack}}
        CF_ENDPOINT: {{brats-cf-endpoint}}
        CF_USERNAME: {{brats-cf-username}}
        CF_PASSWORD: {{brats-cf-password}}
        CF_ORG: {{brats-cf-org}}
        CF_SPACE: {{brats-cf-space}}
        PROJECT: {{obs-buildpacks-staging-project}}
        GIT_MAIL: {{github-username}}
        GIT_USER: suse-cf-ci-bot
        COMPOSER_GITHUB_OAUTH_TOKEN: {{github-access-token}} # Needed for PHP integration tests
      run:
        path: ci/brats/tasks/run-tests.sh
    on_failure:
      put: email.suse
      params:
        subject: mail-output/subject-failed.txt
        body: mail-output/body-failed.txt
- name: create-final-<%= buildpack %>-buildpack
  plan:
  - aggregate:
    - get: s3.suse-buildpacks-staging-<%= buildpack %>
      trigger: true
      passed:
      <% if integration_tests.include?(buildpack) %>
      - run-<%= buildpack %>-integration-tests
      <% else %>
      - run-<%= buildpack %>-brats
      <% end %>
    - get: ci
    - get: git.cf-<%= buildpack %>-buildpack
  - task: create-final-buildpack
    input_mapping:
      git.cf-buildpack: git.cf-<%= buildpack %>-buildpack
      s3.suse-buildpacks-staging: s3.suse-buildpacks-staging-<%= buildpack %>
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: splatform/concourse-brats
      inputs:
        - name: ci
        - name: git.cf-buildpack
        - name: s3.suse-buildpacks-staging
      outputs:
        - name: s3-out
      params:
        BUILDPACK: <%= buildpack %>
        STAGING_BUCKET_NAME: suse-buildpacks-staging
        PRODUCTION_BUCKET_NAME: cf-buildpacks.suse.com
        PRODUCTION_BUCKET_URL: "https://cf-buildpacks.suse.com"
        AWS_ACCESS_KEY_ID: {{aws-access-key}}
        AWS_SECRET_ACCESS_KEY: {{aws-secret-key}}
        AWS_DEFAULT_REGION: us-east-1
      run:
        path: ci/brats/tasks/create-final-buildpack.sh
  - put: s3.cf-buildpacks.suse.com-<%= buildpack %>
    params:
      file: s3-out/*.zip
      acl: public-read
- name: add-manifest-and-tag-<%= buildpack %>-buildpack
  plan:
  - aggregate:
    - get: s3.cf-buildpacks.suse.com-<%= buildpack %>
      trigger: true
      passed:
      - create-final-<%= buildpack %>-buildpack
    - get: ci
    - get: git.cf-<%= buildpack %>-buildpack
      passed:
      - create-final-<%= buildpack %>-buildpack
  - task: add-manifest-and-tag
    input_mapping:
      git.cf-buildpack: git.cf-<%= buildpack %>-buildpack
      s3.cf-buildpacks.suse.com: s3.cf-buildpacks.suse.com-<%= buildpack %>
    params:
      GITHUB_PRIVATE_KEY: |
        {{github-private-key}}
      GIT_MAIL: {{github-username}}
      GIT_USER: suse-cf-ci-bot
      GITHUB_TOKEN: ((github-access-token))
      BUILDPACK: <%= buildpack %>
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: splatform/concourse-brats
      inputs:
        - name: ci
        - name: s3.cf-buildpacks.suse.com
        - name: git.cf-buildpack
      run:
        path: ci/brats/tasks/add-manifest-and-tag.sh
- name: test-offline-<%= buildpack %>-buildpack-creation
  plan:
  - get: s3.cf-buildpacks.suse.com-<%= buildpack %>
    trigger: true
    passed:
    - add-manifest-and-tag-<%= buildpack %>-buildpack
  - task: run-offline-buildpack-packager
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: splatform/cf-buildpack-packager
      run:
        path: bash
        args:
          - "-c"
          - mkdir /out && /package --accept-external-binaries SUSE <%= buildpack %> ''  {{brats-cf-stack}}
    on_failure:
      put: email.suse
      params:
        subject_text: "Offline <%= buildpack %> buildpack could not be created"
        body_text: "Building the offline buildpack with our packager failed. Check Concourse for the results."
- name: update-<%= buildpack %>-buildpack-release
  plan:
  - aggregate:
    - get: ci
    - get: git.cf-<%= buildpack %>-buildpack-release
    - get: s3.cf-buildpacks.suse.com-<%= buildpack %>
      trigger: true
      passed:
      - test-offline-<%= buildpack %>-buildpack-creation
  - task: trigger-final-releases-pipeline
    input_mapping:
      git.cf-buildpack-release: git.cf-<%= buildpack %>-buildpack-release
      s3.cf-buildpacks.suse.com: s3.cf-buildpacks.suse.com-<%= buildpack %>
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: splatform/concourse-brats
      inputs:
        - name: ci
        - name: git.cf-buildpack-release
        - name: s3.cf-buildpacks.suse.com
      params:
        BUILDPACK: <%= buildpack %>
        GITHUB_PRIVATE_KEY: |
          {{github-private-key}}
        GIT_MAIL: {{github-username}}
        GIT_USER: suse-cf-ci-bot
      run:
        path: ci/brats/tasks/update-buildpack-release.sh
<% end %>
